name: C++ Task Scheduler CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Build Project
        run: |
          mkdir -p example/build && cd example/build
          cmake ../ 
          make 2> build_errors.log 

      - name: Fix macOS Library Path (if needed)
        if: matrix.os == 'macos-latest'
        run: |
          chmod +x bin/test_chronix || true
          install_name_tool -add_rpath "${GITHUB_WORKSPACE}/lib/mysqlx_arm64" ${GITHUB_WORKSPACE}/bin/test_chronix || true

      - name: Run Tests
        run: |
          cd example/build
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            export DYLD_LIBRARY_PATH="${GITHUB_WORKSPACE}/lib/mysqlx_arm64"
          fi
          ctest --output-on-failure > test_output.log
        continue-on-error: true

      - name: Report Summary
        run: |
          echo "## 🛠️ Build Log" >> $GITHUB_STEP_SUMMARY
          cat example/build/build_errors.log >> $GITHUB_STEP_SUMMARY

          echo "## ✅ Test Output" >> $GITHUB_STEP_SUMMARY
          cat example/build/test_output.log >> $GITHUB_STEP_SUMMARY
